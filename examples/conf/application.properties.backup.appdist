aws.region=us-east-1

# Use iceberg sink
debezium.sink.type=iceberg

# Iceberg sink config
debezium.sink.iceberg.table-prefix=debeziumcdc_
debezium.sink.iceberg.upsert=true
debezium.sink.iceberg.upsert-keep-deletes=true
debezium.sink.iceberg.write.format.default=parquet

# S3 config using JdbcCatalog catalog And S3FileIO
debezium.sink.iceberg.catalog=org.apache.iceberg.spark.SparkCatalog
debezium.sink.iceberg.catalog.io-impl=org.apache.iceberg.aws.s3.S3FileIO
debezium.sink.iceberg.catalog-impl=software.amazon.s3tables.iceberg.S3TablesCatalog
debezium.sink.iceberg.catalog-name=iceberg
debezium.sink.iceberg.table-namespace=icebergdata
debezium.sink.iceberg.warehouse=arn:aws:s3tables:us-east-1:142548018081:bucket/dodd-iceberg-integration

# Use S3FileIO
debezium.sink.iceberg.io-impl=org.apache.iceberg.aws.s3.S3FileIO
# debezium.sink.iceberg.s3.endpoint=http://minio:9000
# debezium.sink.iceberg.s3.endpoint=arn:aws:s3tables:us-east-1:142548018081:bucket/dodd-iceberg-integration
debezium.sink.iceberg.s3.path-style-access=true
# debezium.sink.iceberg.s3.access-key-id=admin
# debezium.sink.iceberg.s3.secret-access-key=password
# debezium.sink.iceberg.s3.access-key-id=ASIASCMEGEOQVOAQLI7Y
# debezium.sink.iceberg.s3.secret-access-key=TzUEYpLhHfDvIz8Fh+wz10E91sMmZ/5Nx7woxWOR

# debezium.sink.batch.batch-size-wait=MaxBatchSizeWait
# debezium.source.max.batch.size=2048
# debezium.source.max.queue.size=16000
# debezium.sink.batch.batch-size-wait.max-wait-ms=30000
# debezium.sink.batch.batch-size-wait.wait-interval-ms=5000

# postgres source
debezium.source.connector.class=io.debezium.connector.postgresql.PostgresConnector
debezium.source.offset.flush.interval.ms=0
debezium.source.database.hostname=localhost
debezium.source.database.port=5432
debezium.source.database.user=postgres
debezium.source.database.password=postgres
debezium.source.database.dbname=postgres
debezium.source.database.server.name=tutorial
debezium.source.database.server.id=1234
debezium.source.topic.prefix=dbz_
# timescaledb source config
debezium.source.schema.include.list=inventory,_timescaledb_internal
debezium.source.transforms=timescaledb
debezium.source.transforms.timescaledb.type=io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDb
# saving debezium state data to destination, iceberg tables
# see https://debezium.io/documentation/reference/stable/development/engine.html#advanced-consuming
debezium.source.offset.storage=io.debezium.server.iceberg.offset.IcebergOffsetBackingStore
debezium.source.offset.storage.iceberg.table-name=debezium_offset_storage_table
# see https://debezium.io/documentation/reference/stable/development/engine.html#database-history-properties
debezium.source.schema.history.internal=io.debezium.server.iceberg.history.IcebergSchemaHistory
debezium.source.schema.history.internal.iceberg.table-name=debezium_database_history_storage_table

# enable event schemas - mandatory
debezium.format.value.schemas.enable=true
debezium.format.key.schemas.enable=true
debezium.format.value=json
debezium.format.key=json

# do event flattening. unwrap message!
debezium.transforms=unwrap
debezium.transforms.unwrap.type=io.debezium.transforms.ExtractNewRecordState
debezium.transforms.unwrap.add.fields=op,table,source.ts_ms,db
debezium.transforms.unwrap.delete.handling.mode=rewrite
debezium.transforms.unwrap.drop.tombstones=true

# ############ SET LOG LEVELS ############
quarkus.log.level=DEBUG
quarkus.log.console.json=false
